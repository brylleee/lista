{"version":3,"sources":["assets/iredoc-logo.png","App.js","index.js"],"names":["module","exports","__webpack_require__","p","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","spreadsheetID","sheetName","sheetID","accessToken","App","sections","_useState","useState","_useState2","slicedToArray","setName","_useState3","_useState4","studentNumber","setStudentNumber","_useState5","_useState6","guild","setGuild","_useState7","_useState8","section","setSection","_useState9","_useState10","sideMenuOpen","setSideMenuOpen","_useState11","_useState12","hasScanned","setHasScanned","_useState13","_useState14","nameNotFound","setNameNotFound","_useState15","_useState16","cameraNoPermission","setCameraNoPermission","LISTOGuilds","GILASGuilds","updateAttendance","_ref","asyncToGenerator","_callee","attName","nameIndex","meetingDatesStartIndex","nextMeetingDay","sheetDates","dates","dateToday","request","data","_context","replace","includes","ABM1101","CA1101","DA1101","HUMSS1101","TO1101","ITM1101","STEM1101","STEM1102","ABM1201","CA1201","DA1201","HUMSS1201","ITM1201","STEM1201","STEM1202","TO1201","fetch","concat","headers","Content-Type","Authorization","json","t0","Date","toLocaleDateString","month","day","split","join","console","log","body","JSON","stringify","requests","updateCells","range","sheetId","startColumnIndex","endColumnIndex","endRowIndex","startRowIndex","fields","rows","userEnteredValue","stringValue","t1","t2","parseInt","_x","_x2","_x3","apply","arguments","useEffect","Html5Qrcode","formatsToSupport","Html5QrcodeSupportedFormats","QR_CODE","start","facingMode","fps","qrbox","text","parsed","qrcodeContent","splitted","parseResult","aes","decrypt","toString","match","map","v","String","fromCharCode","react_default","a","createElement","react_onsenui","side","width","swipeable","collapse","isOpen","onPostClose","id","align","src","require","style","height","alt","renderToolbar","className","color","onClick","icon","cancelable","fontFamily","onChange","event","target","modifier","xhr","XMLHttpRequest","open","onload","responseText","send","disabled","startApp","ReactDOM","createRoot","document","getElementById","render","src_App","window","cordova","addEventListener"],"mappings":"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","file":"static/js/main.e486077a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/iredoc-logo.ce6965c1.png\";","import React, { useEffect, useState } from \"react\";\nimport { Html5Qrcode, Html5QrcodeSupportedFormats } from \"html5-qrcode\";\nimport * as Ons from \"react-onsenui\";\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\n\nimport aes from 'crypto-js/aes';\n\nconst spreadsheetID = \"1SI1vuW0HQUveqiKPT1Jjr_A471W02Co0OXVcp2zyeO0\";\nlet sheetName = \"\"  // SHEET NAME\nlet sheetID = 0;  // SHEET ID\n\nlet accessToken = \"\";\n\n// Our main component\nconst App = () => {\n\n    // Name, guild, and section states that updates everytime QR Code is scanned\n    let [name, setName] = useState(\"\");\n    let [studentNumber, setStudentNumber] = useState(\"\");\n    let [guild, setGuild] = useState(\"\");\n    let [section, setSection] = useState(\"\");\n\n    let [sideMenuOpen, setSideMenuOpen] = useState(false);\n    let [hasScanned, setHasScanned] = useState(false);\n    let [nameNotFound, setNameNotFound] = useState(false);\n    let [cameraNoPermission, setCameraNoPermission] = useState(false);\n\n    // Separate name, guild, and section and return it as different variables\n    let parseResult = (qrcodeContent) => {\n        let splitted = qrcodeContent.split(\" [|] \");  // QR Code content example: Dela Cruz, Juan A. [|] Student No. [|] IREDOC [|] STEM1201\n        return {\n            name: splitted[0],\n            studentNumber: splitted[1],\n            guild: splitted[2],\n            section: splitted[3],\n        };\n    };\n\n    const LISTOGuilds = [ \"IREDOC\", \"SWES\", \"ETIKA\", \"NUMERIKA\", \"LETRA\" ];\n    const GILASGuilds = [ \"AWIT\", \"GALAW\", \"INSTRUMENTO\", \"LITERATURA\", \"SINING (MULTIMEDIA)\", \"SINING (VISUAL ARTS)\" ];\n\n    let sections;\n\n    let updateAttendance = async (attName, section, guild) => {\n        // Name Index: Position of the Student's name in the Google Sheet\n        var nameIndex = 1;\n        const meetingDatesStartIndex = 3;\n        let nextMeetingDay;\n\n        attName = attName.replace(/\\s\\w{1,2}\\.$/, \"\");  // Strip middle name\n\n        if(LISTOGuilds.includes(guild)) {\n            sheetName = \"LISTA_SectionBased_Attendance\";\n            sections = {\n                \"ABM1101\": [4, 7],\n                \"CA1101\": [9, 22],\n                \"DA1101\": [9, 22],\n                \"HUMSS1101\": [24, 29],\n                \"TO1101\": [24, 29],\n                \"ITM1101\": [31, 54],\n                \"STEM1101\": [56, 81],\n                \"STEM1102\": [83, 92],\n                \"ABM1201\": [95, 113],\n                \"CA1201\": [115, 121],\n                \"DA1201\": [115, 121],\n                \"HUMSS1201\": [123, 134],\n                \"ITM1201\": [136, 160],\n                \"STEM1201\": [162, 178],\n                \"STEM1202\": [180, 195],\n            };\n            sheetID = 1382711057;\n        } else if(GILASGuilds.includes(guild)) {\n            sheetName = \"LISTA_SectionBased_GILAS_Attendance\";\n            sections = {\n                \"STEM1101\": [4, 11],\n                \"STEM1102\": [13, 41],\n                \"ABM1101\": [43, 52],\n                \"HUMSS1101\": [54, 68],\n                \"ITM1101\": [70, 83],\n                \"TO1101\": [85, 95],\n                \"CA1101\": [97, 100],\n                \"DA1101\": [102, 106],\n                \"STEM1201\": [108, 123],\n                \"STEM1202\": [125, 133],\n                \"ABM1201\": [135, 148],\n                \"HUMSS1201\": [150, 160],\n                \"TO1201\": [162, 183],\n                \"ITM1201\": [185, 194],\n                \"CA1201\": [196, 202],\n                \"DA1201\": [204, 210],\n            };\n            sheetID = 634796021;\n        }\n\n        const sheetDates = await fetch(\n            `https://sheets.googleapis.com/v4/spreadsheets/${spreadsheetID}/values/${sheetName}!D2:2`,\n            {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${accessToken}`,\n                },\n            }\n        );\n\n        let dates;\n\n        try {\n            dates = (await sheetDates.json())[\"values\"][0];\n        } catch(e) {\n            dates = [];\n        }\n\n        const dateToday = new Date();\n\n        // Check if today is already added in the meeting dates row\n        if(dates[dates.length-1] === dateToday.toLocaleDateString('en-us',\n                                                    { month: 'short' , day: 'numeric' }).split(\" \").join(\". \")) {\n            nextMeetingDay = dates.length;\n        } else {\n            console.log(\"Cannot find Current Date in Google Sheets\\nAdding a new Column!\");\n\n            fetch(\n                `https://sheets.googleapis.com/v4/spreadsheets/${spreadsheetID}:batchUpdate`,\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        //update this token with yours.\n                        Authorization: `Bearer ${accessToken}`,\n                    },\n                    body: JSON.stringify({\n                        \"requests\": [{\n                            \"updateCells\": {\n                                \"range\": {\n                                    \"sheetId\": sheetID,\n                                    \"startColumnIndex\": meetingDatesStartIndex + dates.length ,\n                                    \"endColumnIndex\": meetingDatesStartIndex + dates.length + 1,\n                                    \"endRowIndex\": 2,\n                                    \"startRowIndex\": 1\n                                },\n                                \"fields\": \"*\",\n                                \"rows\": [{\n                                    \"values\": [{\n                                        \"userEnteredValue\":{\n                                            \"stringValue\": dateToday.toLocaleDateString('en-us', { month: 'short' , day: 'numeric' }).split(\" \").join(\". \")\n                                        }\n                                    }]\n                                }]\n                            }\n                        }]\n                    }),\n                }\n            );\n\n            nextMeetingDay = dates.length + 1;\n        }\n\n        const request = await fetch(\n            `https://sheets.googleapis.com/v4/spreadsheets/${spreadsheetID}/values/${sheetName}!A${sections[section][0]}:B${sections[section][1]}`,\n            {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${accessToken}`,\n                },\n            }\n        );\n\n        const data = await request.json();\n\n        // Finding and getting the position of the Student's name\n        for (var i in data[\"values\"]) {\n            if (data[\"values\"][i][1].slice(0, attName.length) === attName) {\n                nameIndex = parseInt(i) +  sections[section][0];\n                console.log(\"Located at Column 1, Row \" + nameIndex);\n\n                fetch(\n                    `https://sheets.googleapis.com/v4/spreadsheets/${spreadsheetID}:batchUpdate`,\n                    {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: `Bearer ${accessToken}`,\n                        },\n\n                        body: JSON.stringify({\n                            requests: [\n                                {\n                                    updateCells: {\n                                        rows: [\n                                            {\n                                                values: [\n                                                    {\n                                                        userEnteredValue: {\n                                                            stringValue:\n                                                                \"P\",\n                                                        },\n                                                    },\n                                                ],\n                                            },\n                                        ],\n                                        range: {\n                                            sheetId: sheetID,\n                                            // Change Meeting Day\n                                            startColumnIndex: meetingDatesStartIndex + (nextMeetingDay - 1),\n                                            endColumnIndex: meetingDatesStartIndex + nextMeetingDay,\n                                            endRowIndex: nameIndex,\n                                            startRowIndex: nameIndex - 1,\n                                        },\n                                        fields: \"*\",\n                                    },\n                                },\n                            ],\n                        }),\n                    }\n                );\n                return;\n            }\n        }\n\n        setNameNotFound(true);\n        return data;\n    };\n\n    // useEffect() means if this component is rendered (shown to the user)\n    useEffect(() => {\n        const html5QrCode = new Html5Qrcode(\"reader\", {\n            formatsToSupport: [ Html5QrcodeSupportedFormats.QR_CODE ]\n        }); // Use the div with id 'reader' as our QR Code Reader\n        const config = { fps: 5, qrbox: 200 }; //  QR Code Reader configurations\n\n        // Start reader using back camera\n        html5QrCode\n            .start(\n                { facingMode: \"environment\" },\n                config,\n                (text, result) => {\n                    // Parse QR Code content and update our states\n                    let parsed = parseResult(aes.decrypt(text, \"@stamaria.sti.edu.ph\").toString()  // Raw result to hex\n                                    .match(/.{1,2}/g).map(function(v) {                // Hex to string\n                                        return String.fromCharCode(parseInt(v, 16));\n                                    }).join(''))\n\n                    setName(parsed.name);\n                    setStudentNumber(parsed.studentNumber);\n                    setGuild(parsed.guild);\n                    setSection(parsed.section);\n\n                    setHasScanned(true);\n                },\n            )\n            .catch((err) => {\n                // This block will execute if the app has trouble starting the camera\n                setCameraNoPermission(true);\n            });\n    }, []);\n\n    let confirmAttendance = () => {\n        let xhr = new XMLHttpRequest();\n        xhr.open('GET', \"https://raw.githubusercontent.com/brylleee/lista/main/.temptoken\");\n\n        xhr.onload = () => {\n            accessToken = xhr.responseText;\n            console.log(\"Token: \" + accessToken);\n\n            updateAttendance(name, section, guild);\n\n            setHasScanned(false);\n\n            setName(\"\");\n            setStudentNumber(\"\");\n            setGuild(\"\");\n            setSection(\"\");\n        }\n\n        xhr.send();\n    }\n\n    let renderToolbar = () => {\n        return (\n            <Ons.Toolbar id=\"toolbar\">\n                <div className=\"left\">\n                    <div className=\"sidebyside\">\n                        <Ons.ToolbarButton style={{ color: \"white\" }} onClick={ () => setSideMenuOpen(true) }>\n                            <Ons.Icon icon=\"md-menu\"></Ons.Icon>\n\n\n                        </Ons.ToolbarButton>\n\n                        <span id=\"toolbar-title\">Lista</span>\n\n                    </div>\n                </div>\n            </Ons.Toolbar>\n        );\n    }\n\n    // Render all visible parts of our app, place all (HTML) contents here\n    return (\n        <Ons.Page>\n            <Ons.Splitter>\n                <Ons.SplitterSide\n                    side=\"left\"\n                    width={ \"300\" }\n                    swipeable={ true }\n                    collapse={ true }\n                    isOpen={ sideMenuOpen }\n                    onPostClose={ () => setSideMenuOpen(false) }>\n\n                    <Ons.Page>\n                        <div id=\"logo\" align=\"center\" >\n                            <img src={ require(\"./assets/iredoc-logo.png\") } style={{ height: \"300px\" }} alt=\"iredoclogo\" />\n                        </div>\n\n                        <hr />\n\n                        <p align=\"center\">STI LISTO Club All Rights Reserved</p>\n                        <p align=\"center\">PBP Group | IREDOC Guild</p>\n                    </Ons.Page>\n                </Ons.SplitterSide>\n\n                <Ons.SplitterContent>\n                    <Ons.Page\n                        renderToolbar={ renderToolbar }>\n\n                        <br /><br />\n\n                        <Ons.AlertDialog isOpen={ nameNotFound } cancelable>\n                            <div className=\"alert-dialog-title\">Aw snap! No name found</div>\n                            <div className=\"alert-dialog-content\">\n                                It could be because a student's name in the QR Code has a typo, or their name in Google Sheets has a typo. <br /><br />\n                                Try editing the name and try again, if that doesn't work look up their name in Google Sheets <br /><br />\n                                If the methods above doesn't work, contact the IREDOC Coordinator, it might be because token has expired.\n                            </div>\n\n                            <div className=\"alert-dialog-footer\">\n                                <Ons.Button className=\"alert-dialog-button\" onClick={ () => setNameNotFound(false) }>\n                                    Okie-dokey\n                                </Ons.Button>\n                            </div>\n                        </Ons.AlertDialog>\n\n                        <Ons.AlertDialog isOpen={ cameraNoPermission } cancelable>\n                            <div className=\"alert-dialog-title\">Oops! I can't see</div>\n                            <div className=\"alert-dialog-content\">\n                                I don't have permission to use your camera! I can't scan QR Codes! <br /><br />\n                                Please enable Camera permissions on your device settings and restart the app!\n                            </div>\n\n                            <div className=\"alert-dialog-footer\">\n                                <Ons.Button className=\"alert-dialog-button\" onClick={ () => setCameraNoPermission(false) }>\n                                    Okay!\n                                </Ons.Button>\n                            </div>\n                        </Ons.AlertDialog>\n\n\n                        <div id=\"reader\"></div>\n\n                        <br /><br />\n\n                        {/* Display QR Code content. This is a temporary proof of concept\n                            QR Code content should be synced to google sheets */}\n                        <div align=\"center\" id=\"student-information\">\n                            <Ons.Card>\n                                <h2 className=\"title\" align=\"center\">Student Information</h2>\n\n                                <p id=\"name\">Name: <Ons.Input style={{ fontFamily: \"barlowLight\" }} value={ name } onChange={ (event) => setName(event.target.value) } /></p>\n                                <p id=\"student-number\">Student number: {studentNumber}</p>\n                                <p id=\"guild\">Guild: {guild}</p>\n                                <p id=\"section\">Section: {section}</p>\n                            </Ons.Card>\n                        </div>\n\n                        <div id=\"buttons\">\n                            <Ons.Button modifier=\"large--cta\" onClick={ confirmAttendance } disabled={ !hasScanned }>\n                                CONFIRM\n                            </Ons.Button>\n                        </div>\n                    </Ons.Page>\n                </Ons.SplitterContent>\n            </Ons.Splitter>\n        </Ons.Page>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\n\n// Don't make any changes here! This script just initializes our main component and starts it\n\nconst startApp = () => {\n\tconst root = ReactDOM.createRoot(document.getElementById('root'));\n\troot.render(<App />);\n};\n\n// Check if this is on Cordova Application then add an event listener for device ready first\n// Else just start the app\nif(window.cordova) {\n\tdocument.addEventListener('deviceready', startApp, false);\n} else {\n\tstartApp();\n}\n"],"sourceRoot":""}